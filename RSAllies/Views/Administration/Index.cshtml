@{
    ViewData["Title"] = "Dashboard";
}

<div id="Container">

    <div id="firstContainer">
        
        <div id="first">
            
            <div style="display:flex;flex-direction:row;justify-content:start;align-items:start;gap:8px;">
                <i style="color:#f2c94c" class="bi bi-gender-ambiguous"></i>
                <span class="english">Gender demographics</span>
                <span class="swahili">Jinsia</span>
            </div>

            <figure class="highcharts-figure">
                <div id="container1"></div>
            </figure>

            <div></div>

        </div>

        <div id="second">
            
            <div style="display:flex;flex-direction:row;justify-content:start;align-items:start;gap:8px;align-self:flex-start">
                <i style="color:#f2c94c" class="bi bi-123"></i>
                <span class="english">Age group demographics</span>
                <span class="swahili">Umri</span>
            </div>

            <figure class="highcharts-figure">
                <div id="Age"></div>
            </figure>

            <div></div>

        </div>

        <div id="third">

            <div style="display:flex;flex-direction:row;justify-content:start;align-items:start;gap:8px;">
                <i style="color:#f2c94c" class="bi bi-bar-chart-line-fill"></i>
                <span class="english">Education Level analysis</span>
                <span class="swahili">Kiwango cha elimu</span>
            </div>

            <figure class="highcharts-figure">
                <div id="column-drill"></div>
            </figure>



        </div>

    </div>

    <div id="secondContainer">
        
        <div id="left">
            ss
        </div>

        <div id="right">
            
            <p style="font-weight:900;color:#f2c94c">Peak Booking by Day</p>

            <figure class="highcharts-figure">
                <div id="peakBooking"></div>
            </figure>

        </div>

    </div>

    <div id="thirdContainer">

        <div id="other">
            ss
        </div>

        <div id="feedback">
            
            <div style="margin-left: auto">
                <span class="english">Feedback</span>
                <span class="swahili">Maoni</span>
                <i style="color:#f2c94c" class="bi bi-info-circle"></i>
            </div>

            <div id="Support">

            </div>

        </div>

    </div>

</div>
@section Scripts {
    <script src="/js/highcharts.js"></script>
    <script src="/js/exporting.js"></script>
    <script src="/js/accessibility.js"></script>
    <script src="/js/drilldown.js"></script>
    <script src="/js/series-label.js"></script>
    <script src="/js/export-data.js"></script>

    <script>

        console.log(@Html.Raw(ViewBag.AgeGroupCounts[0]))

    </script>

    <script type="text/javascript">
        Highcharts.chart('container1', {
            chart: {
                plotBorderWidth: 0,
                plotShadow: false,
                style: {
                    fontFamily: 'Fira Code VF',
                    padding: 0,
                    margin: 0
                }
            },
            title: {
                text: 'Gender',
                align: 'center',
                verticalAlign: 'middle',
                y: 35,
                style: {
                    fontSize: '12px',
                    FontFamily: 'Fira Code VF',
                }
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            accessibility: {
                point: {
                    valueSuffix: '%'
                }
            },
            plotOptions: {
                pie: {
                    dataLabels: {
                        enabled: true,
                        distance: -30,
                        style: {
                            fontWeight: 'bold',
                            color: 'white'
                        }
                    },
                    startAngle: -90,
                    endAngle: 90,
                    center: ['50%', '75%'],
                    size: '160%'
                }
            },
            series: [{
                type: 'pie',
                name: 'Gender demographics',
                innerSize: '50%',
                data: [
                    ['Male', @ViewBag.MaleCount],
                    ['Female', @ViewBag.FemaleCount],
                ]
            }]
        });
    </script>

    <script type="text/javascript">
        (function (H) {
            let animationHasRun = false; // Flag to track if animation has run

            H.seriesTypes.pie.prototype.animate = function (init) {
                const series = this,
                    chart = series.chart,
                    points = series.points,
                    { animation } = series.options,
                    { startAngleRad } = series;

                function fanAnimate(point, startAngleRad) {
                    const graphic = point.graphic,
                        args = point.shapeArgs;

                    if (graphic && args) {
                        graphic
                            .attr({
                                start: startAngleRad,
                                end: startAngleRad,
                                opacity: 1
                            })
                            .animate({
                                start: args.start,
                                end: args.end
                            }, {
                                duration: animation.duration / points.length
                            }, function () {
                                if (points[point.index + 1]) {
                                    fanAnimate(points[point.index + 1], args.end);
                                }
                                if (point.index === series.points.length - 1) {
                                    series.dataLabelsGroup.animate({
                                        opacity: 1
                                    }, void 0, function () {
                                        // Set data labels opacity to 1 after animation
                                        series.points.forEach(point => {
                                            point.dataLabel.attr({
                                                opacity: 1
                                            });
                                        });
                                        series.update({
                                            enableMouseTracking: true
                                        }, false);
                                        chart.update({
                                            plotOptions: {
                                                pie: {
                                                    innerSize: '40%',
                                                    borderRadius: 8
                                                }
                                            }
                                        });
                                    });
                                }
                            });
                    }
                }

                if (init) {
                    points.forEach(point => {
                        point.opacity = 1;
                    });
                } else {
                    // Run the animation only if it hasn't run before
                    if (!animationHasRun) {
                        animationHasRun = true;
                        fanAnimate(points[0], startAngleRad);
                    }
                }
            };
        }(Highcharts));

        Highcharts.chart('Age', {
            chart: {
                type: 'pie',
                style: {
                    fontFamily: 'Fira Code Light',
                    padding: 0,
                    margin: 0
                }
            },
            title: {
                text: '',
                align: 'left'
            },
            tooltip: {
                pointFormat: 'Age group: <b>{point.percentage:.1f}%</b>'
            },
            accessibility: {
                point: {
                    valueSuffix: '%'
                }
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    borderWidth: 2,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b><br>{point.percentage:.1f}%',
                        distance: 20
                    }
                }
            },
            series: [{
                // Disable mouse tracking on load, enable after custom animation
                enableMouseTracking: false,
                animation: {
                    duration: 2000
                },
                colorByPoint: true,
                data: [{
                    name: '18-25',
                    y: @Html.Raw(ViewBag.AgeGroupCounts[0])
                }, {
                    name: '26-33',
                    y: @Html.Raw(ViewBag.AgeGroupCounts[1])
                }, {
                    name: '34-41',
                    y: @Html.Raw(ViewBag.AgeGroupCounts[2])
                }, {
                    name: '42-49',
                    y: @Html.Raw(ViewBag.AgeGroupCounts[3])
                }, {
                    name: '50-55',
                    y: @Html.Raw(ViewBag.AgeGroupCounts[4])
                }, {
                    name: '55+',
                    y: @Html.Raw(ViewBag.AgeGroupCounts[5])
                }
                ]
            }]
        });

    </script>

    <script type="text/javascript">
        // Data retrieved from https://gs.statcounter.com/browser-market-share#monthly-202201-202201-bar

        // Create the chart
        Highcharts.chart('column-drill', {
            chart: {
                type: 'column',
                style: {
                    fontFamily: 'Fira Code VF',
                    padding: 0,
                    margin: 0
                }
            },
            title: {
                align: 'left',
                text: ''
            },
            accessibility: {
                announceNewData: {
                    enabled: true
                }
            },
            xAxis: {
                type: 'category'
            },
            yAxis: {
                title: {
                    text: 'Total percent users share'
                }

            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y:.1f}%'
                    }
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: ' +
                    '<b>{point.y:.2f}%</b> of total<br/>'
            },

            series: [
                {
                    name: 'Education level analysis',
                    colorByPoint: true,
                    data: [
                        {
                            name: 'Uneducated',
                            y: @Html.Raw(ViewBag.EducationLevelCounts[0]),
                            drilldown: null
                        },
                        {
                            name: 'Class 7',
                            y: @Html.Raw(ViewBag.EducationLevelCounts[1]),
                            drilldown: null
                        },
                        {
                            name: 'Form 2',
                            y: @Html.Raw(ViewBag.EducationLevelCounts[2]),
                            drilldown: null
                        },
                        {
                            name: 'Form 4',
                            y: @Html.Raw(ViewBag.EducationLevelCounts[3]),
                            drilldown: null
                        },
                        {
                            name: 'Form 6',
                            y: @Html.Raw(ViewBag.EducationLevelCounts[4]),
                            drilldown: null
                        },
                        {
                            name: 'Diploma',
                            y: @Html.Raw(ViewBag.EducationLevelCounts[5]),
                            drilldown: null
                        },
                        {
                            name: 'Degree',
                            y: @Html.Raw(ViewBag.EducationLevelCounts[6]),
                            drilldown: 'Degree'
                        }
                    ]
                }
            ],
            drilldown: {
                breadcrumbs: {
                    position: {
                        align: 'center'
                    }
                },
                series: [
                    {
                        name: 'Degree',
                        id: 'Degree',
                        data: [
                            [
                                'Bachelors Degree',
                                @Html.Raw(ViewBag.DegreeCounts[0])
                            ],
                            [
                                'Masters Degree',
                                @Html.Raw(ViewBag.DegreeCounts[1])
                            ],
                            [
                                'PhD',
                                @Html.Raw(ViewBag.DegreeCounts[2])
                            ]
                        ]
                    }
                ]
            }
        });

    </script>

    <script type="text/javascript">
        Highcharts.chart('peakBooking', {
            chart: {
                type: 'column',
                style: {
                    fontFamily: 'Fira Code VF',
                    padding: 0,
                    margin: 0
                }
            },
            title: {
                text: '',
                align:  'left'
            },
            xAxis: {
                categories: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
            },
            yAxis: {
                title: {
                    text: 'Peak Booking'
                }
            },
            series: [{
                name: 'Peak Booking',
                data: @Html.Raw(ViewBag.BookingCounts) // Example data, you should replace this with your actual data
            }]
        });
    </script>

}