@{
    ViewData["Title"] = "Test Analysis";
}

<div id="TheContainer">

    <div id="first">

        <div id="first-left">
            <p style="font-weight:900;color:#f2c94c">Score analysis</p>
            <figure class="highcharts-figure">
                <div id="second"></div>
            </figure>

        </div>

        <div id="first-right">
            <p style="font-weight:900;color:#f2c94c">Test response analysis</p>
            <figure class="highcharts-figure">
                <div id="firstGraph"></div>
            </figure>
            <div></div>
        </div>

    </div>

    <div id="second-div">

        <div id="second-div-left">
            <p style="font-weight:900;color:#f2c94c">Exam Retake Analysis</p>
            <p style="text-align:center;font-size:60px;font-weight:900;font-family:'Segoe Script'">102</p>
            <p>students have retaken the exam</p>
        </div>

        <div id="second-div-center">
            <p style="font-weight:900;color:#f2c94c">Test pass/retake counts by Age Group</p>
            <figure class="highcharts-figure">
                <div id="passRetake"></div>
            </figure>
        </div>

        <div id="second-div-right">
            <p style="font-weight:900;color:#f2c94c">Test retake analysis by Gender</p>
        </div>

    </div>

</div>
@section Scripts{

    <script src="/js/highcharts.js"></script>
    <script src="/js/exporting.js"></script>
    <script src="/js/accessibility.js"></script>
    <script src="/js/drilldown.js"></script>
    <script src="/js/series-label.js"></script>
    <script src="/js/export-data.js"></script>
    <script src="/js/highcharts-3d.js"></script>

    <script type="text/javascript">
        Highcharts.chart('firstGraph', {
            chart: {
                type: 'column',
                style: {
                    fontFamily: 'Fira Code VF',
                    padding: 0,
                    margin: 0
                }
            },
            title: {
                text: '',
                align: 'left'
            },
            xAxis: {
                categories: ['18-25', '26-33', '34-41', '42-49', '50-55', '55+']
            },
            yAxis: {
                title: {
                    text: 'Number of Responses'
                }
            },
            series: [{
                name: 'Total Responses',
                data: [30, 12, 30, 0, 0, 0]
            }, {
                name: 'Correct Responses',
                data: [10, 7, 16, 0, 0, 0]
            }, {
                name: 'Incorrect Responses',
                data: [20, 5, 14, 0, 0, 0]
            }]
        });
    </script>

    <script type="text/javascript">
        (function (H) {
            H.seriesTypes.pie.prototype.animate = function (init) {
                const series = this,
                    chart = series.chart,
                    points = series.points,
                    {
                        animation
                    } = series.options,
                    {
                        startAngleRad
                    } = series;

                function fanAnimate(point, startAngleRad) {
                    const graphic = point.graphic,
                        args = point.shapeArgs;

                    if (graphic && args) {

                        graphic
                            // Set inital animation values
                            .attr({
                                start: startAngleRad,
                                end: startAngleRad,
                                opacity: 1
                            })
                            // Animate to the final position
                            .animate({
                                start: args.start,
                                end: args.end
                            }, {
                                duration: animation.duration / points.length
                            }, function () {
                                // On complete, start animating the next point
                                if (points[point.index + 1]) {
                                    fanAnimate(points[point.index + 1], args.end);
                                }
                                // On the last point, fade in the data labels, then
                                // apply the inner size
                                if (point.index === series.points.length - 1) {
                                    series.dataLabelsGroup.animate({
                                        opacity: 1
                                    },
                                        void 0,
                                        function () {
                                            points.forEach(point => {
                                                point.opacity = 1;
                                            });
                                            series.update({
                                                enableMouseTracking: true
                                            }, false);
                                            chart.update({
                                                plotOptions: {
                                                    pie: {
                                                        innerSize: '40%',
                                                        borderRadius: 8
                                                    }
                                                }
                                            });
                                        });
                                }
                            });
                    }
                }

                if (init) {
                    // Hide points on init
                    points.forEach(point => {
                        point.opacity = 0;
                    });
                } else {
                    fanAnimate(points[0], startAngleRad);
                }
            };
        }(Highcharts));

        Highcharts.chart('second', {
            chart: {
                type: 'pie',
                style: {
                    fontFamily: 'Fira Code VF',
                    padding: 0,
                    margin: 0
                }
            },
            title: {
                text: '',
                align: 'left'
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            accessibility: {
                point: {
                    valueSuffix: '%'
                }
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    borderWidth: 2,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b><br>{point.percentage}%',
                        distance: 20
                    }
                }
            },
            series: [{
                // Disable mouse tracking on load, enable after custom animation
                enableMouseTracking: false,
                animation: {
                    duration: 2000
                },
                colorByPoint: true,
                data: [{
                    name: '18-25',
                    y: 21.3
                }, {
                    name: '26-33',
                    y: 18.7
                }, {
                    name: '34-41',
                    y: 20.2
                }, {
                    name: '42-49',
                    y: 14.2
                }, {
                    name: '50-55',
                    y: 15.6
                }, {
                    name: '55+',
                    y: 10
                }
                ]
            }]
        });

    </script>

    <script type="text/javascript">
        Highcharts.chart('passRetake', {
            chart: {
                type: 'line',
                style: {
                    fontFamily: 'Fira Code VF',
                    padding: 0,
                    margin: 0
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: ['18-25', '26-33', '34-41', '42-49', '50-55', '55+']
            },
            yAxis: {
                title: {
                    text: 'Count'
                }
            },
            plotOptions: {
                series: {
                    animation: {
                        duration: 2000 // Custom entrance animation duration in milliseconds
                    }
                }
            },
            series: [{
                name: 'Passed',
                data: [15, 20, 18, 25, 30]
            }, {
                name: 'Failed',
                data: [5, 10, 8, 15, 20]
            }]
        });
    </script>

}