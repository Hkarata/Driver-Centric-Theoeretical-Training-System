@{
    ViewData["Title"] = "Dashboard";
}

<div id="Container">

    <div id="firstContainer">
        
        <div id="first">
            
            <div style="display:flex;flex-direction:row;justify-content:start;align-items:start;gap:8px;">
                <i style="color:#f2c94c" class="bi bi-gender-ambiguous"></i>
                <span class="english">Gender demographics</span>
                <span class="swahili">Jinsia</span>
            </div>

            <figure class="highcharts-figure">
                <div id="container"></div>
            </figure>

        </div>

        <div id="second">
            
            <div style="display:flex;flex-direction:row;justify-content:start;align-items:start;gap:8px;">
                <i style="color:#f2c94c" class="bi bi-123"></i>
                <span class="english">Age group demographics</span>
                <span class="swahili">Umri</span>
            </div>

            <figure class="highcharts-figure">
                <div id="Age"></div>
            </figure>

        </div>

        <div id="third">

            <div style="display:flex;flex-direction:row;justify-content:start;align-items:start;gap:8px;">
                <i style="color:#f2c94c" class="bi bi bi-marker-tip"></i>
                <span class="english">Test analysis</span>
                <span class="swahili">Umri</span>
            </div>

        </div>

    </div>

    <div id="secondContainer">
        ss
    </div>

    <div id="thirdContainer">

        <div id="other">
            ss
        </div>

        <div id="feedback">
            
            <div style="margin-left: auto">
                <span class="english">Feedback</span>
                <span class="swahili">Maoni</span>
                <i style="color:#f2c94c" class="bi bi-info-circle"></i>
            </div>

            <div id="Support">

            </div>

        </div>

    </div>

</div>
@section Scripts {
    <script src="/js/highcharts.js"></script>
    <script src="/js/exporting.js"></script>
    <script src="/js/accessibility.js"></script>
    <script src="/js/export-data.js"></script>

    <script type="text/javascript">
        Highcharts.chart('container', {
            chart: {
                plotBorderWidth: 0,
                plotShadow: false,
                style: {
                    fontFamily: 'Fira Code VF',
                    padding: 0,
                    margin: 0
                }
            },
            title: {
                text: 'Gender',
                align: 'center',
                verticalAlign: 'middle',
                y: 35,
                style: {
                    fontSize: '12px',
                    FontFamily: 'Fira Code VF',
                }
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            accessibility: {
                point: {
                    valueSuffix: '%'
                }
            },
            plotOptions: {
                pie: {
                    dataLabels: {
                        enabled: true,
                        distance: -30,
                        style: {
                            fontWeight: 'bold',
                            color: 'white'
                        }
                    },
                    startAngle: -90,
                    endAngle: 90,
                    center: ['50%', '75%'],
                    size: '160%'
                }
            },
            series: [{
                type: 'pie',
                name: 'Gender demographics',
                innerSize: '50%',
                data: [
                    ['Male', 33.86],
                    ['Female', 62.97],
                ]
            }]
        });
    </script>

    <script type="text/javascript">
        (function (H) {
            H.seriesTypes.pie.prototype.animate = function (init) {
                const series = this,
                    chart = series.chart,
                    points = series.points,
                    {
                        animation
                    } = series.options,
                    {
                        startAngleRad
                    } = series;

                function fanAnimate(point, startAngleRad) {
                    const graphic = point.graphic,
                        args = point.shapeArgs;

                    if (graphic && args) {

                        graphic
                            // Set inital animation values
                            .attr({
                                start: startAngleRad,
                                end: startAngleRad,
                                opacity: 1
                            })
                            // Animate to the final position
                            .animate({
                                start: args.start,
                                end: args.end
                            }, {
                                duration: animation.duration / points.length
                            }, function () {
                                // On complete, start animating the next point
                                if (points[point.index + 1]) {
                                    fanAnimate(points[point.index + 1], args.end);
                                }
                                // On the last point, fade in the data labels, then
                                // apply the inner size
                                if (point.index === series.points.length - 1) {
                                    series.dataLabelsGroup.animate({
                                        opacity: 1
                                    },
                                        void 0,
                                        function () {
                                            points.forEach(point => {
                                                point.opacity = 1;
                                            });
                                            series.update({
                                                enableMouseTracking: true
                                            }, false);
                                            chart.update({
                                                plotOptions: {
                                                    pie: {
                                                        innerSize: '40%',
                                                        borderRadius: 8
                                                    }
                                                }
                                            });
                                        });
                                }
                            });
                    }
                }

                if (init) {
                    // Hide points on init
                    points.forEach(point => {
                        point.opacity = 0;
                    });
                } else {
                    fanAnimate(points[0], startAngleRad);
                }
            };
        }(Highcharts));

        Highcharts.chart('Age', {
            chart: {
                type: 'pie',
                style: {
                    fontFamily: 'Fira Code Light',
                    padding: 0,
                    margin: 0
                }
            },
            title: {
                text: '',
                align: 'left'
            },
            tooltip: {
                pointFormat: 'Age group: <b>{point.percentage:.1f}%</b>'
            },
            accessibility: {
                point: {
                    valueSuffix: '%'
                }
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    borderWidth: 2,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b><br>{point.percentage}%',
                        distance: 20
                    }
                }
            },
            series: [{
                // Disable mouse tracking on load, enable after custom animation
                enableMouseTracking: false,
                animation: {
                    duration: 2000
                },
                colorByPoint: true,
                data: [{
                    name: '18-24',
                    y: 21.3
                }, {
                    name: '25-29',
                    y: 18.7
                }, {
                    name: '30-34',
                    y: 20.2
                }, {
                    name: '35-39',
                    y: 14.2
                }, {
                    name: 'Above 40',
                    y: 25.6
                }]
            }]
        });

    </script>
}