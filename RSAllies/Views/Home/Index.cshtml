@using RSAllies.Contracts.Responses
@using RSAllies.Services
@inject SessionService sessionService
@model BookingDto

@{
    ViewData["Title"] = "Home Page";
}

<div id="Container">

    <div id="pc" class="container">

        <div class="row align-items-center" id="first">
            <div class="col-md-6 mb-2">
                <img src="/images/first-image.jpg" class="img-fluid rounded-start rounded-end h-100" alt="Image description">
            </div>
            <div class="col-md-6" style="font-family: 'Fira Code VF'">
                <p class="english myHeader">Book &amp; Attempt the Exam.</p>
                <p class="swahili myHeader">Hifadhi Nafasi yako kisha Jibu Mtihani.</p>
                <p class="myContent english">Find the nearest station that’s easily accessible, reserve your spot, show up for the exam, and then follow the remaining steps to obtain your license.</p>
                <p class="swahili myContent">Angalia kituo ulichokaribu nacho, chenye urahisi kukifikia, hifadhi nafasi yako, tokea kujibu mtihani kisha endelea na taratibu nyengine za kupata leseni.</p>
            </div>
        </div>

        @if (Model is null)
        {

        }
        else
        {
            <div id="Card">
                @if (Model.BookedAt < DateTime.Today)
                {
                    <div id="Inner">
                        <div class="d-flex flex-column justify-content-center align-items-center h-100">
                            <img src="/Images/booking.gif" width="100" />
                            <p class="english">You do not have a current booking, please book!</p>
                            <p class="swahili">Huja hifadhi nafasi, jaribu kuhifadhi nafasi katika kituo chochote</p>
                        </div>
                    </div>
                }
                else
                {
                    <div id="Inner">

                        <div class="d-flex flex-row justify-content-between">

                            <span id="VN">@Model.VenueName</span>

                        </div>

                        <br />

                        <div class="d-flex flex-row justify-content-between">

                            <span class="english">Date</span>
                            <span class="swahili">Tarehe</span>

                            <span>@Model.BookedAt.ToString("dd/MM/yyyy")</span>

                        </div>
                        <br />

                        <div class="d-flex flex-row justify-content-between">

                            <span class="english">Time</span>
                            <span class="swahili">Muda</span>

                            <span>@Model.StartTime - @Model.EndTime</span>

                        </div>
                        <br />

                        <div class="d-flex flex-row justify-content-between">

                            <span class="english">Booking status</span>
                            <span class="swahili">Status</span>

                            <span class="badge text-bg-success d-flex justify-content-center align-items-center">@Model.Status</span>

                        </div>

                        <hr />

                        <div style="margin-top: auto">
                            <p>Actions</p>

                            <div id="BDiv">

                                @if (Model.Status != BookingStatus.Confirmed && Model.Status == BookingStatus.Paid)
                                {
                                    <button id="confirm" data-bookingId="@Model!.Id" class="myButtons" style="background-color:#356dca" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                                        <span class="english">Confirm</span>
                                        <span class="swahili">Hakikisha</span>
                                    </button>
                                }
                                else
                                {
                                    <button id="confirm" data-bookingId="@Model!.Id" class="myButtons" style="background-color:#356dca" data-bs-toggle="modal" data-bs-target="#staticBackdrop2">
                                        <span class="english">Pay</span>
                                        <span class="swahili">Lipia</span>
                                    </button>
                                }

                                @if (Model.BookedAt.Date == DateTime.Today)
                                {
                                    <a asp-controller="Test" asp-action="Index" class="myButtons" style="background-color:#8fbe26">
                                        <span class="english">Attempt test</span>
                                        <span class="swahili">Fanya mtihani</span>
                                    </a>
                                }

                            </div>

                        </div>

                    </div>
                }



                <div id="Outer">

                    <p id="GDiv">
                        <span class="english">Guidelines</span>
                        <span class="swahili">Angalizo</span>
                    </p>

                    <ul class="english">
                        <li>Arrive at least 30 minutes before the exam.</li>
                        <li>An ID with your picture.</li>
                        <li>Confirm your booking 45 minutes before the onset of the test, otherwise your booking will be discarded.</li>
                        <li>Cheating is prohibited, and will lead to a temporary ban to attempt the exam.</li>
                    </ul>

                    <span style="margin-top:auto" class="english">Best oƒ luck</span>

                    <ul class="swahili">
                        <li>Fika angalau dakika 30 kabla ya mtihani.</li>
                        <li>Kitambulisho chenye picha yako.</li>
                        <li>Thibitisha uhifadhi wako dakika 45 kabla ya kuanza kwa mtihani, vinginevyo uhifadhi wako utatupiliwa mbali.</li>
                        <li>Kudanganya ni marufuku, na itasababisha marufuku ya muda kujaribu mtihani.</li>
                    </ul>

                    <span style="margin-top:auto" class="swahili">Kila la kheri</span>

                </div>

            </div>
        }

        <br />
        <p style="font-family:'Fira Code VF'" class="english">Reading Materials</p>
        <p style="font-family:'Fira Code VF'" class="swahili" style="display: none">Makala ya Kujisomea</p>

        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-6 col-md-4 col-lg-3 mb-3">
                    <div class="card h-100 ClickableDiv" style="cursor: pointer;">
                        <img class="card-img-top" alt="sample images" src="images/law.jpg" />
                        <div class="card-body">
                            <p style="font-family:'Fira Code VF'" class="english">Traffic laws &amp; Legislations</p>
                            <p style="font-family:'Fira Code VF'" class="swahili card-title">Sheria za Barabarani</p>
                            <a style="font-family:'Fira Code VF'" href="pdfs/law.pdf" class="english btn btn-primary" download="">Download</a>
                            <a style="font-family:'Fira Code VF'" href="pdfs/law.pdf" class="swahili btn btn-primary" download="" style="display: none">Pakua</a>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-md-4 col-lg-3 mb-3">
                    <div class="card h-100 ClickableDiv" style="cursor: pointer;">
                        <img class="card-img-top" alt="sample images" src="images/road-signs.jpg" />
                        <div class="card-body">
                            <p style="font-family:'Fira Code VF'" class="english">Road Signs &amp; Symbols</p>
                            <p style="font-family:'Fira Code VF'" class="swahili card-title">Alama za Barabarani</p>
                            <a style="font-family:'Fira Code VF'" href="pdfs/law.pdf" class="english btn btn-primary" download="">Download</a>
                            <a style="font-family:'Fira Code VF'" href="pdfs/law.pdf" class="swahili btn btn-primary" download="" style="display: none">Pakua</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

</div>

@if(Model is not null)
{

    <!-- Modal -->
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" style="font-family:'Fira Code VF'" id="staticBackdropLabel">
                        <span class="english">Booking Confirmation</span>
                        <span class="swahili">Thibitisha nafasi yako</span>
                    </h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div style="font-family:'Fira Code VF'" class="modal-body">

                    <span class="english">You are about to confirm your attendance on the test sitting!</span>
                    <span class="swahili">Unakaribia kuthibitisha uwepo wako siku ya mtihani</span>
                </div>
                <div style="font-family:'Fira Code VF'" class="modal-footer">
                    <button type="button" class="btn btn-warning" data-bs-dismiss="modal">Close</button>
                    <a asp-controller="Home" asp-action="ConfirmBooking" asp-route-bookingId="@Model!.Id" id="confirmButton" type="button" class="btn btn-success">
                        <span class="english">Confirm</span>
                        <span class="swahili">Thibitisha</span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="staticBackdrop2" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <span class="" style="font-family:'Fira Code VF';font-weight:900;color:#356dca;" id="staticBackdropLabel">
                        <span class="english">Booking Payment</span>
                        <span class="swahili">Lipia nafasi yako</span>
                    </span>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div style="font-family:'Fira Code VF'" class="modal-body">

                    <div id="payment">
                        <div>
                            <span class="english">Enter payment number</span>
                            <span class="swahili">Ingiza namba ya malipo</span>
                        </div>

                        <div>
                            <div class="input-group">
                                <span class="input-group-text" id="basic-addon1">#</span>
                                <input type="text" id="paymentNumber" class="form-control" placeholder="PN-0000000">
                            </div>

                            <span id="paymentValidation" class="text-danger"></span>
                        </div>

                        <div class="mt-2 w-100 d-flex flex-row justify-content-between align-items-center">
                            <div id="spinner2" class="spinner-border" style="color:#356dca" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <button class="myButtons " id="payButton" style="background-color:#356dca;margin-left:auto">
                                <span class="english">Pay</span>
                                <span class="swahili">Lipia</span>
                            </button>
                        </div>
                    </div>


                    <div id="request">
                        <div>
                            <span class="english">Click the button below to request payment number.</span>
                            <span class="swahili">Bofya kitufe kuomba namba ya malipo.</span>
                        </div>

                        <div class="mt-2 w-100 d-flex flex-row" style="font-size:15px">

                            <div class="text-info" style="width: 20%;font-weight:550">
                                <span class="english">Info:</span>
                                <span class="swahili">Muhimu:</span>
                            </div>

                            <div class="text-danger" style="width: 80%;font-weight:900">
                                <span class="english">You will receive the payment number via SMS or Mail, use it to confirm your payment</span>
                                <span class="swahili">Utapokea namba ya malipo aidha kwa sms au barua pepe, tumia hio namba kuhakikisha malipo yako.</span>
                            </div>

                        </div>

                        <div class="w-100 d-flex flex-row justify-content-between align-items-center">
                            <div id="spinner" class="spinner-border" style="color:#356dca" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>

                            <button class="myButtons mt-2" id="requestButton" style="background-color:#356dca;margin-left:auto">
                                <span class="english">Request Payment Number</span>
                                <span class="swahili">Omba namba ya malipo</span>
                            </button>
                        </div>
                    </div>



                </div>
            </div>
        </div>
    </div>

}

@section Scripts {

    <script>

        $(document).ready(function () {

            $("#confirm").click(function () {
                var bookingId = $(this).data("bookingId");

                console.log(bookingId);

                $("#confirmButton").data("bookingId", bookingId);
            });

            $("#confirmButton").click(function () {
                var bookingId = $(this).data("bookingId");

                console.log(bookingId);

                // var url = `/confirmbooking?bookingId=${bookingId}`;

                // window.location.href = url;
            });

        });

    </script>

    <script type="text/javascript">

        function checkRequestCookie() {
            // Get all cookies as a string
            const cookiesString = document.cookie;

            // Split the string into key-value pairs
            const cookies = cookiesString.split(';');

            // Loop through each cookie pair
            for (let i = 0; i < cookies.length; i++) {
                const currentCookie = cookies[i].trim();
                // Split the current cookie pair into key and value
                const [key, value] = currentCookie.split('=');

                if (key === "paymentRequest" && value === "true") {

                    // You can also disable the request button here
                    document.getElementById("requestButton").disabled = true;

                    return true; // Exit the function if found
                }
            }

            // Cookie not found or value is not "true"
            return false;
        }

        // Call the function on page load (assuming window.onload event)
        document.addEventListener("DOMContentLoaded", function () {
            let result = checkRequestCookie();
            const requestDiv = document.getElementById("request");
            const paymentDiv = document.getElementById("payment")

            if (result) {
                requestDiv.style.display = "none";
            }else{
                paymentDiv.style.display = "none";
            }

            const spinner2 = document.getElementById("spinner2");

            spinner2.style.display = "none";


        });


        const paymentNumberInput = document.getElementById("paymentNumber");
        const paymentValidation = document.getElementById("paymentValidation");
        const payButton = document.getElementById("payButton");


        paymentNumberInput.addEventListener("input", function () {



            // Get the entered payment number
            const paymentNumber = this.value.trim();

            // Clear any previous validation message
            paymentValidation.textContent = "";

            // Validation checks and message updates
            if (paymentNumber.length === 0) {
                paymentValidation.textContent = ""; // Clear message if empty
            } else if (!paymentNumber.startsWith("PN-")) {
                paymentValidation.textContent = "Payment number must start with PN-.";
            } else if (paymentNumber.length > 3 && isNaN(paymentNumber.substring(3))) {
                paymentValidation.textContent = "Payment number can only contain numbers after PN-.";
            } else {
                // Validation seems OK (can be further enhanced)
                paymentValidation.textContent = "";
            }
        });

        payButton.addEventListener("click", function () {
            // Get the entered payment number
            const paymentNumber = paymentNumberInput.value.trim();

            // Clear any previous validation message
            paymentValidation.textContent = "";

            // Validation checks
            if (paymentNumber === "") {
                paymentValidation.textContent = "Please enter your payment number.";
                return false; // Prevent form submission (if applicable)
            } else if (!paymentNumber.startsWith("PN-")) {
                paymentValidation.textContent = "Payment number must start with PN-.";
                return false;
            } else if (isNaN(paymentNumber.substring(3))) { // Check if remaining characters are numbers
                paymentValidation.textContent = "Payment number can only contain numbers after PN-.";
                return false;
            }

            // If validation passes, submit the form (or perform your desired action)
            // You might need to modify this part based on your form setup
            const spinner2 = document.getElementById("spinner2");

            spinner2.style.display = "";

            const paymentData = {
                userId: '@sessionService.GetUserId()', // Include user ID
                paymentNumber: paymentNumberInput.value.trim()
            };

            console.log(paymentData);

            fetch('http://localhost:5031/api/payment?userId=' + paymentData.userId + '&paymentNumber=' + paymentData.paymentNumber, {
                method: 'POST', // Set method to POST
                headers: { 'Content-Type': 'application/json' }, // Set content type
            })
                .then(response => response.json()) // Parse response as JSON
                .then(data => {

                    spinner2.style.display = "none;"

                    if (data.isSuccess) {
                        window.location.reload();
                    } else{
                        paymentValidation.textContent = "An error occurred during payment processing, try again later.";
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    paymentValidation.textContent = "An error occurred during payment processing.";

                    spinner2.style.display = "none;"
                    // Handle any errors during the request
                });

        });


        const spinner = document.getElementById("spinner");

        spinner.style.display = "none";

        const requestButton = document.getElementById("requestButton");

        requestButton.addEventListener("click", function () {

            spinner.style.display = "";

            // requestButton.disabled = true;

            fetch('http://localhost:5031/api/payment-number/@sessionService.GetUserId()')
                .then(response => response.json()) // Parse the response as JSON
                .then(data => {
                    // Handle the successful response data here
                    console.log(data); // Example: log the data to the console
                    // You can also update the UI based on the data (e.g., populate the payment number field)

                    const expires = new Date(Date.now() + 24 * 60 * 60 * 1000); // One day from now
                    document.cookie = "paymentRequest=true; expires=" + expires.toUTCString() + "; path=/";

                })
                .catch(error => {
                    // Handle any errors during the request
                    console.error('Error:', error);
                    // You can display an error message to the user
                });
        });
    </script>

}

<style>
    .myButtons {
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        transition: 0.3s ease-in-out;
        color: white;
        font-weight: 500;
        text-decoration: none;
        text-align:center;
    }

        .myButtons:hover {
            transform: scale(1.1);
            box-shadow: 0 0 10px 0 rgba(0,0,0,0.2);
        }
</style>